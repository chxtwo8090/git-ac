name: 'Terraform CI/CD' 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  plan:
    name: Terraform Validate & Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 캐시 경로 수정: 불필요한 ~/.terraform.d/plugin-cache 제거 및 키에 SHA를 추가하여 안정성 확보
      - name: Restore Terraform cache
        uses: actions/cache@v4
        with:
          path: terraform/.terraform 
          key: ${{ runner.os }}-${{ github.sha }}-tf-${{ hashFiles('terraform/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-tf-
            
      # 🌟 CRITICAL FIX: Terraform Init 단계 명시적 추가 (Providers 다운로드)
      - name: Terraform Init (Download Providers)
        id: init
        working-directory: ./terraform
        run: terraform init -input=false

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Install helm
        run: |
          curl -LO https://get.helm.sh/helm-v3.12.3-linux-amd64.tar.gz
          tar xvf helm-v3.12.3-linux-amd64.tar.gz
          sudo mv linux-amd64/helm /usr/local/bin/

      - name: Terraform Validate
        id: validate
        working-directory: ./terraform
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        working-directory: ./terraform
        run: terraform plan -no-color -input=false

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Terraform Plan completed. See the full plan in the action output.'
            })

   apply-k8s:
    name: Terraform Apply (K8s/Helm)
    runs-on: ubuntu-latest
    needs: [apply]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Restore Terraform cache
        uses: actions/cache@v4
        with:
          path: terraform/.terraform
          key: ${{ runner.os }}-${{ github.sha }}-tf-${{ hashFiles('terraform/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-tf-
            
      - name: Terraform Init
        working-directory: ./terraform
        env:
          TF_PLUGIN_CACHE_DIR: ~/.terraform.d/plugin-cache
        run: |
          mkdir -p ~/.terraform.d/plugin-cache
          terraform init -input=false

      # 🌟 CRITICAL FIX 1: kubectl과 helm 설치 (새로운 Runner 환경에 설치)
      - name: Install kubectl and helm
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          # Helm v3.12.3 설치 (최신 버전 사용 권장)
          curl -LO https://get.helm.sh/helm-v3.12.3-linux-amd64.tar.gz
          tar xvf helm-v3.12.3-linux-amd64.tar.gz
          sudo mv linux-amd64/helm /usr/local/bin/

      # 🌟 CRITICAL FIX 2: EKS 클러스터가 활성화될 때까지 기다리고 Kubeconfig 업데이트
      - name: Wait for EKS cluster & Update kubeconfig
        working-directory: ./terraform
        run: |
          EKS_CLUSTER_NAME="eks-project-cluster" # 클러스터 이름 변수와 일치
          echo "Waiting for EKS cluster ($EKS_CLUSTER_NAME) to be ACTIVE..."
          # 클러스터 활성화 대기 (필수)
          aws eks wait cluster-active --name $EKS_CLUSTER_NAME --region ap-northeast-2
          
          echo "Updating Kubeconfig for Terraform/Helm access..."
          # $HOME/.kube/config 파일에 인증 정보 생성
          aws eks update-kubeconfig --region ap-northeast-2 --name $EKS_CLUSTER_NAME --kubeconfig $HOME/.kube/config --alias $EKS_CLUSTER_NAME --set-context --overwrite

      # 🌟 CRITICAL FIX 3: Kubeconfig 경로를 환경 변수에 설정하여 Terraform이 사용하도록 강제
      - name: Terraform Apply (k8s/Helm)
        working-directory: ./terraform
        env:
          # Helm/Kubernetes Provider가 Kubeconfig 파일을 읽도록 환경 변수 설정
          KUBECONFIG: $HOME/.kube/config
        run: terraform apply -auto-approve -input=false -var="deploy_k8s=true"